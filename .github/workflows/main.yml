name: Build, Push, and Update Manifest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Grant write permissions for Actions to commit to this repo
permissions:
  contents: write
  packages: write
  security-events: write

env:
  # Docker Hub image name
  IMAGE_NAME: datpham-qualgo/my-first-gitops
  
  # Kubernetes manifest file path
  MANIFEST_PATH: k8s/deployment.yaml

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm audit --audit-level high
        continue-on-error: true

  build-push-and-update:
    runs-on: ubuntu-latest
    needs: security-scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (image tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Update image tag in Kubernetes manifest
        run: |
          # Get the SHA-based tag
          NEW_TAG=$(echo "${{ steps.meta.outputs.tags }}" | grep -E "main-[a-f0-9]{7}" | head -1 | cut -d':' -f2)
          if [ -z "$NEW_TAG" ]; then
            echo "Error: Could not extract SHA tag"
            exit 1
          fi
          
          echo "New image tag: $NEW_TAG"
          
          # Update deployment.yaml with new image tag
          sed -i "s|${{ env.IMAGE_NAME }}:.*|${{ env.IMAGE_NAME }}:${NEW_TAG}|g" ${{ env.MANIFEST_PATH }}
          
          # Verify the change
          echo "Updated manifest:"
          grep "image:" ${{ env.MANIFEST_PATH }}

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Check if manifest file exists
          if [ ! -f "${{ env.MANIFEST_PATH }}" ]; then
            echo "Error: Manifest file ${{ env.MANIFEST_PATH }} not found"
            exit 1
          fi
          
          git add ${{ env.MANIFEST_PATH }}
          
          # Only commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "ðŸš€ Update image tag to ${{ steps.meta.outputs.version }}
            
            - Updated image in ${{ env.MANIFEST_PATH }}
            - Triggered by commit: ${{ github.sha }}
            - Build URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            git push
          else
            echo "No changes to commit"
          fi
